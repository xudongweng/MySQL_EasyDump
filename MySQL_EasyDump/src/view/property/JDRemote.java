/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.property;

import com.cfg.PublicProperty;
import com.controller.xmlrpc.RPCInfoInterfaceController;
import com.helper.NetStateHelper;
import javax.swing.JOptionPane;



/**
 *
 * @author xudong.weng
 */
public class JDRemote extends javax.swing.JDialog {

    /**
     * Creates new form JDRemote
     * @param parent
     * @param modal
     */
    public JDRemote(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        if(this.jbEnable.isEnabled()&&this.jbDisable.isEnabled()){
            this.jbDisable.setEnabled(false);
        }
    }
    private boolean remotestat=false;
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jbEnable = new javax.swing.JButton();
        jbDisable = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("远程");
        setResizable(false);

        jbEnable.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        jbEnable.setText("开启");
        jbEnable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEnableActionPerformed(evt);
            }
        });

        jbDisable.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        jbDisable.setText("关闭");
        jbDisable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbDisableActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jbDisable, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
                    .addComponent(jbEnable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jbEnable, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jbDisable, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbEnableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEnableActionPerformed
        if(this.jbEnable.isEnabled()){
            if(NetStateHelper.isLoclePortUsing(PublicProperty.getRemoteport())){
                JOptionPane.showMessageDialog(rootPane,"端口号"+PublicProperty.getRemoteport()+"已被占用，无法开启。", "提示", JOptionPane.OK_OPTION);
                return;
            }
            this.jbEnable.setEnabled(false);
            this.jbDisable.setEnabled(true);
            RPCInfoInterfaceController.startRemoteServer();
        }
    }//GEN-LAST:event_jbEnableActionPerformed

    private void jbDisableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbDisableActionPerformed
        if(this.jbDisable.isEnabled()){
            this.jbDisable.setEnabled(false);
            this.jbEnable.setEnabled(true);
            RPCInfoInterfaceController.shutdownRemoteServer();
        }
    }//GEN-LAST:event_jbDisableActionPerformed
    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jbDisable;
    private javax.swing.JButton jbEnable;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the remotestat
     */
    public boolean isRemotestat() {
        return remotestat;
    }

    /**
     * @param remotestat the remotestat to set
     */
    public void setRemotestat(boolean remotestat) {
        this.remotestat = remotestat;
    }
}
